% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constructive_heuristic.R
\name{constructive_heuristic}
\alias{constructive_heuristic}
\title{Generate an initial group allocation solution based on a greedy heuristic.}
\usage{
constructive_heuristic(C, delta, w, rho = 1e-04, cl = NULL)
}
\arguments{
\item{C}{matrix of class counts per group. Commonly calculated using
[consolidate_class_counts()]. Each position `c_{ij}` contains
the number of examples of the j-th Class contained in the i-th group.}

\item{delta}{vector of desired split proportions (must add up to one). It
is useful (but not mandatory) to use a vector delta that is sorted
in decreasing order, to prevent later confusion.}

\item{w}{vector of weights for function aggregation. Must be of
length 3 and add to 1. All weights must be non-negative. If a
scalar value is passed then the weights are taken as equal for all
objectives. Weights are scaled proportionally if they don't add to 1.}

\item{rho}{small positive value for augmented Tchebycheff scalarisation.}

\item{cl}{a cluster object, created by package `parallel` or package `snow`.
If `NULL` the function will use the registered default cluster (or none).}
}
\value{
Matrix of binary allocation variables. Each position `x_{ki}`
indicates the allocation or not of the i-th group to the k-th split.
}
\description{
Generates an initial allocation matrix.
}
